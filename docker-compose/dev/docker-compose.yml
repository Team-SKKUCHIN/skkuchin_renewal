version: "2"

services:
  database:
    image: mysql
    container_name: skkuchin-db
    environment:
      - MYSQL_DATABASE=service
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=1234
    command:
      [
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
      ]
    ports:
      - 3306:3306
    networks:
      - skkuchin-network

  server:
    image: server
    build:
      context: ../../backend
      dockerfile: ./docker/dev/Dockerfile
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ../../backend:/app
    working_dir: /app
    depends_on:
      - database
    container_name: skkuchin-backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://database:3306/service?serverTimezone=Asia/Seoul&characterEncoding=UTF-8&useUnicode=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - RABBITMQ_HOST=rabbitmq
      - SPRING_REDIS_HOST=redis
    networks:
      - skkuchin-network

  client:
    image: client
    build:
      context: ../../frontend
      dockerfile: ./docker/dev/Dockerfile
    restart: always
    container_name: skkuchin-frontend
    ports:
      - 3000:3000
    environment:
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_KAKAOMAP_APPKEY=53a909c464c1aac1af1ee43c1f03ce86
      - NEXT_PUBLIC_KAKAOMAP_APIKEY=eec1369924fcf9860f419cd6fcb0b82c
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    working_dir: /app
    stdin_open: true
    tty: true
    networks:
      - skkuchin-network

  redis:
    image: redis:alpine
    container_name: skkuchin-redis
    ports:
      - 6379:6379
    labels:
      - "name=redis"
      - "mode=standalone"
    restart: always
    command: redis-server --port 6379
    networks:
      - skkuchin-network

  # zookeeper:
  #   image: quay.io/debezium/zookeeper:2.1
  #   ports:
  #     - 2181:2181
  #     - 2888:2888
  #     - 3888:3888
  #   networks:
  #     - skkuchin-network

  # kafka:
  #   image: quay.io/debezium/kafka:2.1
  #   ports:
  #     - 9092:9092
  #   environment:
  #     ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_HEAP_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - skkuchin-network

  # apicurio:
  #   image: apicurio/apicurio-registry-mem:2.2.5.Final
  #   ports:
  #     - 8081:8080
  #   networks:
  #     - skkuchin-network

  # connect:
  #   image: quay.io/debezium/connect:2.1
  #   ports:
  #     - 8083:8083
  #   environment:
  #     - BOOTSTRAP_SERVERS=kafka:9092
  #     - GROUP_ID=1
  #     - CONFIG_STORAGE_TOPIC=my_connect_configs
  #     - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #     - STATUS_STORAGE_TOPIC=my_connect_statuses
  #     - ENABLE_APICURIO_CONVERTERS=true
  #   networks:
  #     - skkuchin-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15670:15670"
      - "15672:15672"
      - "61613:61613"
    command: sh -c "rabbitmq-plugins enable rabbitmq_web_stomp rabbitmq_web_stomp_examples && rabbitmq-server start"
    networks:
      - skkuchin-network

networks:
  skkuchin-network: